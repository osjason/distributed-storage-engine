syntax = "proto3";
package meta;
import public "google/protobuf/timestamp.proto";
import public "google/protobuf/empty.proto";
option java_multiple_files=false;
option java_package="com.hyz.proto";
option java_outer_classname = "NameNode_DataNode";


/*
    如果Client 上传中断 ，只发 Block 附带的 FileHash，让 NameNode 删除该 File 的所有已经记录的元数据
 */

// 每个分成了多个数据块
/*
    nameNode 存储:

    "blockList": {
        "第一块":[
            Block,
            Block,
            Block
            ],
        "第二块": [
            "Block ID 4" : "Server ID 1",
            "Block ID 5" : "Server ID 2",
            "Block ID 6" : "Server ID 3"
            ]
    }
 */
message Block{
    string ServerId = 1;
    string BlockId = 2;
    int64 StarSubscript = 5;
    int64 EndSubscript = 6;
}

message BlockOrderMap{
    int32 OrderOfBlockInFile = 1;
    repeated Block BlockList = 2;
}

// 1: a,b,c; 2:a,b,c

message BlockListResponse {
    string FileHash = 1;
    google.protobuf.Timestamp UploadTime = 2;
    repeated BlockOrderMap BlockList = 3;
}

//--------------------

//  DataNode 作为服务端，NameNode 作为远程函数调用端
//      背景：Client 的任何【主动操作】（上传/删/下载/修改）经过 NameNode 申请后，Client 直接向 DataNode 操作
//      todo 明确使用场景
service BlockResultReport{
    // 返回某一个文件的 Block 元信息 和所属文件的整体 hash 值
    rpc GetBlockStatus(google.protobuf.Empty) returns (stream BlockListResponse);
}